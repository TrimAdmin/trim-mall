// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Status {
  ENABLE
  DISABLE
}

// 管理后台-用户
model SysUser {
  id          Int      @id @unique @default(autoincrement())
  username    String   @unique @db.VarChar(50)
  password    String   @db.VarChar(255)
  email       String?  @db.VarChar(255)
  mobilePhone String?  @map("mobile_phone") @db.VarChar(50)
  nickname    String?  @db.VarChar(50)
  status      Status   @default(ENABLE)
  avatarKey   String?  @default("2703e23c-ff34-4573-99fb-f86ab8296e25.avatar.jpg") @map("avatar_key") @db.VarChar(500)
  createTime  DateTime @default(now()) @map("create_time") @db.Timestamp()
  updateTime  DateTime @default(now()) @updatedAt @map("update_time") @db.Timestamp()

  @@map("sys_user")
}

// 管理后台-部门
model SysDept {
  id         Int       @id @unique @default(autoincrement())
  name       String    @db.VarChar(50)
  status     Status    @default(ENABLE)
  sort       Int?      @default(1)
  parentId   Int?      @default(0)
  parnetDept SysDept?  @relation("ChildDepts", fields: [parentId], references: [id])
  children   SysDept[] @relation("ChildDepts")
  createTime DateTime  @default(now()) @map("create_time") @db.Timestamp()
  updateTime DateTime  @default(now()) @updatedAt @map("update_time") @db.Timestamp()

  @@map("sys_dept")
}

// 管理后台-角色
model SysRole {
  id         Int      @id @unique @default(autoincrement())
  name       String   @db.VarChar(50)
  sort       Int?     @default(1)
  status     Status   @default(ENABLE)
  remark     String?  @db.VarChar(200)
  createTime DateTime @default(now()) @map("create_time") @db.Timestamp()
  updateTime DateTime @default(now()) @updatedAt @map("update_time") @db.Timestamp()

  @@map("sys_role")
}

enum SysMenuType {
  MENU
  BUTTON
}

// 管理后台-菜单
model SysMenu {
  id         Int          @id @unique @default(autoincrement())
  /// 路由名称
  name       String       @db.VarChar(200)
  /// 路由路径
  path       String?      @db.VarChar(500)
  /// 组件路径
  component  String?      @db.VarChar(500)
  /// 包含title、icon、show、keepAlive等属性
  meta       Json?
  type       SysMenuType?
  status     Status       @default(ENABLE)
  /// 权限标识
  permission String?      @db.VarChar(100)
  sort       Int?         @default(1)
  parentId   Int?         @default(0)
  parentMenu SysMenu?     @relation("ParentMenu", fields: [parentId], references: [id])
  children   SysMenu[]    @relation("ParentMenu")
  remark     String?      @db.VarChar(200)
  createTime DateTime     @default(now()) @map("create_time") @db.Timestamp()
  updateTime DateTime     @default(now()) @updatedAt @map("update_time") @db.Timestamp()

  @@map("sys_menu")
}

// 管理后台-数据字典
model SysDictType {
  id         Int           @id @unique @default(autoincrement())
  /// 字典名称
  name       String        @db.VarChar(200)
  /// 字典唯一标识
  code       String        @unique @db.VarChar(200)
  status     Status        @default(ENABLE)
  remark     String?       @db.VarChar(200)
  dataList   SysDictData[]
  createTime DateTime      @default(now()) @map("create_time") @db.Timestamp()
  updateTime DateTime      @default(now()) @updatedAt @map("update_time") @db.Timestamp()

  @@map("sys_dict_type")
}

// 管理后台-数据字典数据
model SysDictData {
  id         Int         @id @unique @default(autoincrement())
  typeId     Int
  type       SysDictType @relation(fields: [typeId], references: [id])
  /// 字典名称
  name       String      @unique @db.VarChar(200)
  /// 字典值
  value      String      @db.VarChar(200)
  status     Status      @default(ENABLE)
  remark     String?     @db.VarChar(200)
  createTime DateTime    @default(now()) @map("create_time") @db.Timestamp()
  updateTime DateTime    @default(now()) @updatedAt @map("update_time") @db.Timestamp()
}

// 行政区划-省
model AddProvince {
  code    String    @unique
  name    String
  chilren AddCity[]

  @@map("add_province")
}

// 行政区划-市
model AddCity {
  code         String      @unique
  name         String
  province     AddProvince @relation(fields: [provinceCode], references: [code])
  provinceCode String
  chilren      AddArea[]

  @@map("add_city")
}

// 行政区划-区/县
model AddArea {
  code         String      @unique
  name         String
  city         AddCity     @relation(fields: [cityCode], references: [code])
  cityCode     String
  provinceCode String
  chilren      AddStreet[]

  @@map("add_area")
}

// 行政区划-乡镇/街道
model AddStreet {
  code         String  @unique
  name         String
  area         AddArea @relation(fields: [areaCode], references: [code])
  areaCode     String
  provinceCode String
  cityCode     String

  @@map("add_street")
}
